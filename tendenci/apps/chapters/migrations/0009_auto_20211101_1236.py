# Generated by Django 2.2.24 on 2021-11-01 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tendenci.libs.tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0005_entity_show_for_donation'),
        ('payments', '0003_payment_check_number'),
        ('files', '0007_auto_20200902_1545'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('invoices', '0006_auto_20200902_1545'),
        ('chapters', '0008_chapter_county'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChapterMembershipApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_anonymous_view', models.BooleanField(default=True, verbose_name='Public can view')),
                ('allow_user_view', models.BooleanField(default=True, verbose_name='Signed in user can view')),
                ('allow_member_view', models.BooleanField(default=True)),
                ('allow_user_edit', models.BooleanField(default=False, verbose_name='Signed in user can change')),
                ('allow_member_edit', models.BooleanField(default=False)),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('creator_username', models.CharField(max_length=150)),
                ('owner_username', models.CharField(max_length=150)),
                ('status', models.BooleanField(default=True, verbose_name='Active')),
                ('status_detail', models.CharField(default='active', max_length=50)),
                ('guid', models.CharField(editable=False, max_length=50)),
                ('name', models.CharField(max_length=155, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this application. Displays at top of application.')),
                ('confirmation_text', tendenci.libs.tinymce.models.HTMLField()),
                ('notes', models.TextField(blank=True, default='')),
                ('use_captcha', models.BooleanField(default=True, verbose_name='Use Captcha')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershipapp_creator', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershipapp_entity', to='entities.Entity')),
            ],
            options={
                'verbose_name': 'Chapter Membership Application',
            },
        ),
        migrations.CreateModel(
            name='ChapterMembershipFile',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='files.File')),
            ],
            bases=('files.file',),
        ),
        migrations.CreateModel(
            name='ChapterMembershipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_anonymous_view', models.BooleanField(default=True, verbose_name='Public can view')),
                ('allow_user_view', models.BooleanField(default=True, verbose_name='Signed in user can view')),
                ('allow_member_view', models.BooleanField(default=True)),
                ('allow_user_edit', models.BooleanField(default=False, verbose_name='Signed in user can change')),
                ('allow_member_edit', models.BooleanField(default=False)),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('creator_username', models.CharField(max_length=150)),
                ('owner_username', models.CharField(max_length=150)),
                ('status', models.BooleanField(default=True, verbose_name='Active')),
                ('status_detail', models.CharField(default='active', max_length=50)),
                ('position', models.IntegerField(blank=True, default=0, null=True, verbose_name='Position')),
                ('guid', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Set 0 for free membership.', max_digits=15, verbose_name='Price')),
                ('renewal_price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Set 0 for free membership.', max_digits=15, null=True, verbose_name='Renewal Price')),
                ('require_approval', models.BooleanField(default=True, verbose_name='Require Approval')),
                ('require_payment_approval', models.BooleanField(default=True, help_text='If checked, auto-approved memberships will require a successful online payment to be auto-approved.', verbose_name='Auto-approval requires payment')),
                ('allow_renewal', models.BooleanField(default=True, help_text='If not selected, then this membership type cannot be renewed.', verbose_name='Allow Renewal')),
                ('renewal', models.BooleanField(default=False, help_text='Reserve this membership type for renewals only, not available to new members.', verbose_name='Renewal Only')),
                ('renewal_require_approval', models.BooleanField(default=True, verbose_name='Renewal Requires Approval')),
                ('admin_only', models.BooleanField(default=False, verbose_name='Admin Only')),
                ('never_expires', models.BooleanField(default=False, help_text='If selected, skip the Renewal Options.', verbose_name='Never Expires')),
                ('period', models.IntegerField(default=0, verbose_name='Period')),
                ('period_unit', models.CharField(choices=[('days', 'Days'), ('months', 'Months'), ('years', 'Years')], max_length=10)),
                ('period_type', models.CharField(choices=[('fixed', 'Fixed'), ('rolling', 'Rolling')], default='rolling', max_length=10, verbose_name='Period Type')),
                ('rolling_option', models.CharField(max_length=50, verbose_name='Expires On')),
                ('rolling_option1_day', models.IntegerField(default=0, verbose_name='Expiration Day')),
                ('rolling_renew_option', models.CharField(max_length=50, verbose_name='Renewal Expires On')),
                ('rolling_renew_option1_day', models.IntegerField(default=0)),
                ('rolling_renew_option2_day', models.IntegerField(default=0)),
                ('fixed_option', models.CharField(max_length=50, verbose_name='Expires On')),
                ('fixed_option1_day', models.IntegerField(default=0)),
                ('fixed_option1_month', models.IntegerField(default=0)),
                ('fixed_option1_year', models.IntegerField(default=0)),
                ('fixed_option2_day', models.IntegerField(default=0)),
                ('fixed_option2_month', models.IntegerField(default=0)),
                ('fixed_option2_can_rollover', models.BooleanField(default=False, verbose_name='Allow Rollover')),
                ('fixed_option2_rollover_days', models.IntegerField(default=0, help_text='Membership signups after this date covers the following calendar year as well.')),
                ('renewal_period_start', models.IntegerField(default=30, help_text='How long (in days) before the memberships expires can the member renew their membership.', verbose_name='Renewal Period Start')),
                ('renewal_period_end', models.IntegerField(default=30, help_text='How long (in days) after the memberships expires can the member renew their membership.', verbose_name='Renewal Period End')),
                ('expiration_grace_period', models.IntegerField(default=0, help_text='The number of days (maximum 100) after the membership expires their membership is still active.', verbose_name='Expiration Grace Period')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershiptype_creator', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershiptype_entity', to='entities.Entity')),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershiptype_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chapter Membership Type',
            },
        ),
        migrations.CreateModel(
            name='ChapterMembershipAppField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(blank=True, default=0, null=True, verbose_name='Position')),
                ('label', models.CharField(max_length=2000, verbose_name='Label')),
                ('field_name', models.CharField(blank=True, default='', max_length=100)),
                ('required', models.BooleanField(blank=True, default=False, verbose_name='Required')),
                ('display', models.BooleanField(blank=True, default=True, verbose_name='Show')),
                ('customizable', models.BooleanField(blank=True, default=False, help_text='Chapter leaders can customize this field.')),
                ('admin_only', models.BooleanField(default=False, verbose_name='Admin Only')),
                ('field_type', models.CharField(blank=True, choices=[('', 'Set to Default'), ('CharField', 'Text'), ('CharField/django.forms.Textarea', 'Paragraph Text'), ('BooleanField', 'Checkbox'), ('ChoiceField', 'Select One (Drop Down)'), ('ChoiceField/django.forms.RadioSelect', 'Select One (Radio Buttons)'), ('MultipleChoiceField', 'Multi select (Drop Down)'), ('MultipleChoiceField/django.forms.CheckboxSelectMultiple', 'Multi select (Checkboxes)'), ('CountrySelectField', 'Countries Drop Down'), ('EmailField', 'Email'), ('FileField', 'File upload'), ('DateField/django.forms.widgets.SelectDateWidget', 'Date'), ('DateTimeField', 'Date/time'), ('section_break', 'Section Break')], max_length=64, verbose_name='Field Type')),
                ('description', models.TextField(blank=True, default='', max_length=200, verbose_name='Description')),
                ('help_text', models.CharField(blank=True, default='', max_length=300, verbose_name='Help Text')),
                ('choices', models.CharField(blank=True, help_text='Comma separated options where applicable', max_length=1000, verbose_name='Choices')),
                ('default_value', models.CharField(blank=True, default='', max_length=200, verbose_name='Default Value')),
                ('css_class', models.CharField(blank=True, default='', max_length=200, verbose_name='CSS Class')),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('membership_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='chapters.ChapterMembershipApp')),
            ],
            options={
                'verbose_name': 'Field',
                'verbose_name_plural': 'Fields',
                'ordering': ('position',),
            },
        ),
        migrations.AddField(
            model_name='chaptermembershipapp',
            name='membership_types',
            field=models.ManyToManyField(to='chapters.ChapterMembershipType', verbose_name='Chapter Membership Types'),
        ),
        migrations.AddField(
            model_name='chaptermembershipapp',
            name='owner',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembershipapp_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chaptermembershipapp',
            name='payment_methods',
            field=models.ManyToManyField(to='payments.PaymentMethod', verbose_name='Payment Methods'),
        ),
        migrations.CreateModel(
            name='ChapterMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_anonymous_view', models.BooleanField(default=True, verbose_name='Public can view')),
                ('allow_user_view', models.BooleanField(default=True, verbose_name='Signed in user can view')),
                ('allow_member_view', models.BooleanField(default=True)),
                ('allow_user_edit', models.BooleanField(default=False, verbose_name='Signed in user can change')),
                ('allow_member_edit', models.BooleanField(default=False)),
                ('create_dt', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('update_dt', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('creator_username', models.CharField(max_length=150)),
                ('owner_username', models.CharField(max_length=150)),
                ('status', models.BooleanField(default=True, verbose_name='Active')),
                ('status_detail', models.CharField(default='active', max_length=50)),
                ('guid', models.CharField(editable=False, max_length=50)),
                ('member_number', models.CharField(blank=True, max_length=50)),
                ('renewal', models.BooleanField(blank=True, default=False)),
                ('certifications', models.CharField(blank=True, default='', max_length=500)),
                ('work_experience', models.TextField(blank=True, default='')),
                ('referral', models.CharField(blank=True, default='', max_length=500)),
                ('expertise', models.CharField(blank=True, default='', max_length=1000)),
                ('occupation', models.CharField(blank=True, default='', max_length=100)),
                ('volunteer_availability', models.BooleanField(default=False)),
                ('social_media_links', models.CharField(blank=True, default='', max_length=500)),
                ('school_type', models.CharField(blank=True, max_length=50)),
                ('school_name', models.CharField(blank=True, default='', max_length=200)),
                ('ud1', models.TextField(blank=True, default='')),
                ('ud2', models.TextField(blank=True, default='')),
                ('ud3', models.TextField(blank=True, default='')),
                ('ud4', models.TextField(blank=True, default='')),
                ('ud5', models.TextField(blank=True, default='')),
                ('ud6', models.TextField(blank=True, default='')),
                ('ud7', models.TextField(blank=True, default='')),
                ('ud8', models.TextField(blank=True, default='')),
                ('ud9', models.TextField(blank=True, default='')),
                ('ud10', models.TextField(blank=True, default='')),
                ('ud11', models.TextField(blank=True, default='')),
                ('ud12', models.TextField(blank=True, default='')),
                ('ud13', models.TextField(blank=True, default='')),
                ('ud14', models.TextField(blank=True, default='')),
                ('ud15', models.TextField(blank=True, default='')),
                ('notes', models.TextField(blank=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('join_dt', models.DateTimeField(blank=True, null=True, verbose_name='Join Date')),
                ('expire_dt', models.DateTimeField(blank=True, null=True, verbose_name='Expire Date')),
                ('renew_dt', models.DateTimeField(blank=True, null=True, verbose_name='Renew Date')),
                ('approved', models.BooleanField(default=False)),
                ('approve_dt', models.DateTimeField(blank=True, null=True, verbose_name='Approved Date')),
                ('rejected', models.BooleanField(default=False)),
                ('rejected_dt', models.DateTimeField(blank=True, null=True, verbose_name='Rejected Date')),
                ('payment_received_dt', models.DateTimeField(null=True)),
                ('app', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='chapters.ChapterMembershipApp')),
                ('approved_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chaptermembership_approved_set', to=settings.AUTH_USER_MODEL)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chapters.Chapter')),
                ('creator', models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembership_creator', to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembership_entity', to='entities.Entity')),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='invoices.Invoice')),
                ('membership_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chapters.ChapterMembershipType')),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters_chaptermembership_owner', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.PaymentMethod')),
                ('rejected_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chaptermembership_rejected_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chapter Membership',
                'verbose_name_plural': 'Chapter Memberships',
            },
        ),
    ]
