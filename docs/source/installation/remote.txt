Remote Installation
===================

Below are some instructions to create a Tendenci site on an Ubuntu server. 14.04 is recommended.

All of the commands below should be run on the command line after you are connected to the server.

Server packages
---------------

You can install all of the necessary Ubuntu packages with the following commands:
::

    sudo apt-get update
    sudo apt-get install git python-pip postgresql build-essential python-dev libevent-dev libpq-dev openssh-server memcached libmemcached-dev libjpeg8 libjpeg-dev libfreetype6 libfreetype6-dev nginx

Along with this, add the necessary symlinks for the jpeg and freetype libraries:
::

    sudo ln -s /usr/lib/`uname -i`-linux-gnu/libz.so /usr/lib
    sudo ln -s /usr/lib/`uname -i`-linux-gnu/libjpeg.so /usr/lib
    sudo ln -s /usr/lib/`uname -i`-linux-gnu/libfreetype.so /usr/lib


Creating a new tendenci project
-------------------------------

We recommend using virtualenv http://docs.python-guide.org/en/latest/dev/virtualenvs/ with virtualenvwrapper https://virtualenvwrapper.readthedocs.org/en/latest/ for your development environment.
Make sure Django 1.8 is installed in your environment.
::

    pip install "Django>=1.8,<1.9"


In your environment, start a new tendenci project with the template (replace <project_name> with your project name).
::

    django-admin.py startproject --template=https://github.com/tendenci/tendenci-project-template/zipball/tendenci7 <project_name>


Installing the requirements
---------------------------

Install the requirements with the following commands.
::

    cd <project_name>
    pip install -r requirements/prod.txt


Setting up the Database
-----------------------

The Postgres database server was installed as part of the step to install server packages. It is a separate application from Tendenci, but is needed as the database backend that will be used for Tendenci.

Create the database and a new postgres user with the following commands (replace ``<DB_NAME>``, ``<DB_USER>`` and ``<DB_PASS>`` with your database name, user and password):
::

    sudo -u postgres psql postgres -c "CREATE USER <DB_USER> WITH PASSWORD '<DB_PASS>';"
    sudo -u postgres psql postgres -c "CREATE DATABASE <DB_NAME> WITH OWNER <DB_USER>;"
    sudo -u postgres psql postgres -c "GRANT ALL PRIVILEGES ON DATABASE <DB_NAME> TO <DB_USER>;"

Next update the ``conf/local_settings.py`` file in the site folder (``/var/www/<project_name>``). Replace ``<DB_NAME>``, ``<DB_USER>`` and ``<DB_PASS>`` for the setting ``DATABASE`` with the newly created database name, user and password.


Setting up SECRET_KEY and SITE_SETTINGS_KEY
-------------------------------------------

The ``SECRET_KEY`` or ``SITE_SETTINGS_KEY`` is a random string with the length of 32. You can update them manually in the ``conf/local_settings.py`` file. Or automatically update it with the following script.
::

    curl https://gist.githubusercontent.com/jennyq/45de71a93cff774c593d/raw/30ede14eb133de66cc839cc0458a1e915368534e/setup_keys.sh | bash


Setting up the site
-------------------

Now, use the deploy script to create the database tables and static media.
::

    python deploy.py

.. Note:: 

    If this is your first time using Tendenci, it's **recommended** to install the available default data.
    ::

        python manage.py load_npo_defaults


To create an administrator login, run the following command and fill in the prompts:
::

    python manage.py createsuperuser


Setting up Upstart
------------------

On Ubuntu, the Upstart functionality can be used to add the site as a service.

First, create a file at the path ``/etc/init/tendenci.conf``. 
::

    cd /etc/init/
    sudo touch tendenci.conf
    
The contents of that file should match the example below:
::

    description "Tendenci Upstart Script"
    start on runlevel [2345]
    stop on runlevel [06]
    respawn
    respawn limit 10 5
    script
        cd /var/www/tendenci
        . venv/bin/activate
        exec gunicorn -w 2 -b 127.0.0.1:8000 conf.wsgi --max-requests 350
    end script

You will need to replace the ``/var/www/sitename`` with the location of the site.

To start this service, use the following command:
::

    sudo service tendenci start

If any changes in the future are made to the file ``conf/local_settings.py``, the service should be restarted with this command:
::

    sudo service tendenci restart


Setting up nginx
----------------

First, make an nginx configuration file for the site. This will be created at ``/etc/nginx/sites-available/sitename`` and should match the example below:
::

    server {
        listen 80;
        server_name localhost;

        charset   utf-8;
        keepalive_timeout  65;
        client_max_body_size  30M;
        root /var/www/sitename/;

        location /static/ {
            access_log off;
            expires 30d;
        }
     
        location /media/ {
            access_log off;
            expires 30d;
        }

        location ~ /themes/([a-zA-Z0-9\-\_]+)/media/ {
            access_log off;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://127.0.0.1:8000/;
        }
    }

Again, replace ``/var/www/sitename/`` with the real path. If you have a domain name like ``example.com`` pointed at the server, add it to the ``server_name`` line in the place of ``localhost``.

Next, create a symlink to the new file at ``/etc/nginx/sites-enabled/sitename`` with this command:
::

    ln -s /etc/nginx/sites-available/sitename /etc/nginx/sites-enabled/sitename

Remove the default record from the sites-enabled with this command:
::

    rm /etc/nginx/sites-enabled/default

Finally, restart the nginx service:
::

    sudo service nginx restart


Setup Mail and Memcached
------------------------

For a mail server, install postfix. This package has 3 steps that you must respond to in order to complete the installation. If the server is alreadly configured with a domain name, enter that domain in the prompts. Otherwise, leave the defaults in place. To install the package, run this command:
::

    apt-get install postfix

Memcache was already installed at the server packages step. Turn the service on with this command:
::

    service memcached start


Load the site
--------------

The site should now be viewable, either at the ip address of the server, or at the domain name that has been setup.


Running Multiple sites on one server
------------------------------------

The process outlined above to install Tendenci can be used multiple times on a single server.

The steps to install Server Packages and the steps to replace the main postgres password do not need to be repeated.

When installing any additional Tendenci sites, replace the ``sitename`` used throughout the examples with a unique name.

When creating the database for any additional sites, be sure to use a unique database name and username. In the instructions above, the database name and username were both ``tendenci``. Change this to something unique for each site.

Each additional Tendenci site will need to run on a different port internally. In the instructions, port 8000 was used. This will be changed for additional sites in the nginx configuration file as well as the ``.upstart.sh`` file for each new site.
